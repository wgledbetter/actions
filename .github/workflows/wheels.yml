name: Wheels and Release

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  # ----------------------------------------------------------------------------
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

  # ----------------------------------------------------------------------------
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
    - name: Install Ubuntu dependencies
      if: ${{ runner.os == 'linux' }}
      env:
        COMPILER: "clang-12"
      run: bash $GITHUB_WORKSPACE/.github/install_ubuntu_dependencies.sh

    - name: Install MacOS dependencies
      if: ${{ runner.os == 'macOS' }}
      run: bash $GITHUB_WORKSPACE/.github/install_macos_dependencies.sh
    # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    - name: Add python requirements
      run : python -m pip install --upgrade wheel setuptools

    - name: Create wheel
      run: python setup.py bdist_wheel

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: dist/*.whl

  # ----------------------------------------------------------------------------
  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: release

      - name: Check downloaded artifacts
        run: ls $GITHUB_WORKSPACE/release/

      # - uses: johnwbyrd/update-release@v1
      #   with:
      #     token: ${{ secrets.YOUR_PRIVATE_SECRET_TOKEN }}
      #     files: $GITHUB_WORKSPACE/release/*
