name: Pip

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  # ----------------------------------------------------------------------------
  build_ubuntu:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-18.04, ubuntu-20.04]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        compiler: ["clang-9", "clang-10", "clang-11", "gcc-8", "gcc-9", "gcc-10"]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      name: Cache oneAPI
      id: cache-oneapi
      with:
        path: "~/oneapi"
        key: ${{ secrets.ONEAPI_VERSION }}

    - name: Install Ubuntu dependencies
      env:
        COMPILER: ${{ matrix.compiler }}
        CACHE_HIT: ${{ steps.cache-oneapi.outputs.cache-hit }}
        ONEAPI_VERSION: ${{ secrets.ONEAPI_VERSION }}
      run: bash $GITHUB_WORKSPACE/.github/install_ubuntu_dependencies.sh

    - name: Add python requirements
      run : python -m pip install --upgrade wheel setuptools

    - name: Build and install
      run: pip install --verbose -e .

  # ----------------------------------------------------------------------------
  # build_mac:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       platform: [macos-11, macos-10.15]
  #       python-version: ["3.8"]

  #   runs-on: ${{ matrix.platform }}

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: true

  #   - uses: conda-incubator/setup-miniconda@v2
  #     with:
  #       # activate-environment: base
  #       # auto-update-conda: true
  #       # auto-activate-base: true
  #       python-version: ${{ matrix.python-version }}

  #   - name: Install MacOS dependencies
  #     if: ${{ runner.os == 'macOS' }}
  #     run: bash $GITHUB_WORKSPACE/.github/install_macos_dependencies.sh

  #   - name: Add python requirements
  #     run : conda activate test && python -m pip install --upgrade wheel setuptools

  #   - name: Build and install
  #     run: conda activate test && pip install --verbose -e .

  # ----------------------------------------------------------------------------
  build_windows:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-2019, windows-2022]
        python-version: ["3.8"]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
